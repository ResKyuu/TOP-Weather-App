@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap");

:root {
  --primary-color: #3b82f6;
  --primary-hover: #2563eb;
  --background-color: #0f172a;
  --cards-color: rgba(30, 41, 59, 0.8);
  --secondary-color: rgba(51, 65, 85, 0.9);
  --text-color: #f8fafc;
  --text-secondary: #cbd5e1;
  --border-color: rgba(148, 163, 184, 0.2);
  --glass-bg: rgba(255, 255, 255, 0.1);
  --glass-border: rgba(255, 255, 255, 0.2);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Inter", sans-serif;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: var(--text-color);
  min-height: 100vh;
  overflow: hidden;
  position: relative;
}

/* Animated Background */
body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
      circle at 20% 80%,
      rgba(120, 119, 198, 0.3) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 80% 20%,
      rgba(255, 119, 198, 0.3) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 40% 40%,
      rgba(120, 219, 255, 0.2) 0%,
      transparent 50%
    );
  z-index: -2;
}

body::after {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(
      2px 2px at 20px 30px,
      rgba(255, 255, 255, 0.3),
      transparent
    ),
    radial-gradient(2px 2px at 40px 70px, rgba(255, 255, 255, 0.2), transparent),
    radial-gradient(1px 1px at 90px 40px, rgba(255, 255, 255, 0.4), transparent),
    radial-gradient(
      1px 1px at 130px 80px,
      rgba(255, 255, 255, 0.2),
      transparent
    ),
    radial-gradient(
      2px 2px at 160px 30px,
      rgba(255, 255, 255, 0.3),
      transparent
    );
  background-repeat: repeat;
  background-size: 200px 100px;
  animation: stars 30s linear infinite;
  z-index: -1;
}

@keyframes backgroundMove {
  0%,
  100% {
    transform: translate(0, 0) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
}

@keyframes stars {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100px);
  }
}

.mainContent > .content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  position: absolute;
  border-radius: 24px;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  margin: auto;
  width: min(90%, 600px);
  height: min(90%, 720px); /* Increased from 700px to 800px and 85% to 90% */
  padding: 40px;
  gap: 30px;
  background: var(--glass-bg);
  backdrop-filter: blur(20px);
  border: 1px solid var(--glass-border);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.searchContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  width: 100%;
}

.search {
  display: flex;
  align-items: center;
  gap: 12px;
  width: 100%;
  max-width: 400px;
}

.searchContainer label {
  font-size: 28px;
  font-weight: 600;
  color: var(--text-color);
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.searchContainer input {
  padding: 14px 18px;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  width: 100%;
  max-width: 250px;
  font-size: 16px;
  font-family: inherit;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  color: var(--text-color);
  transition: all 0.3s ease;
  outline: none;
}

.searchContainer input::placeholder {
  color: var(--text-secondary);
}

.searchContainer input:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  transform: translateY(-1px);
}

.searchContainer button {
  font-size: 18px;
  font-weight: 500;
  padding: 14.5px 24px;
  background: linear-gradient(
    135deg,
    var(--primary-color),
    var(--primary-hover)
  );
  color: white;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
  white-space: nowrap;
}

.searchContainer button:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4);
}

.searchContainer button:active {
  transform: translateY(0);
}

.weatherContents {
  width: 100%;
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
}

.weatherIconContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 20px;
  width: 120px;
  height: 120px;
  background: var(--glass-bg);
  border-radius: 50%;
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  animation: float 6s ease-in-out infinite;
}

.weatherIconContainer img {
  width: 80px;
  height: 80px;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Replace the existing .weatherContentsInformation styles with this */
.weatherContentsInformation {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 12px;
  margin-top: 20px;
}

.weatherContentsInformation h3 {
  color: var(--text-color);
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  padding: 16px;
  background: var(--glass-bg);
  border-radius: 12px;
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  transition: all 0.3s ease;
  font-size: 14px;
  font-weight: 500;
  text-align: center;
  position: relative;
  overflow: hidden;
}

.weatherContentsInformation h3::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    rgba(59, 130, 246, 0.1),
    rgba(147, 51, 234, 0.1)
  );
  opacity: 0;
  transition: opacity 0.3s ease;
}

.weatherContentsInformation h3:hover {
  transform: translateY(-3px) scale(1.02);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  border-color: rgba(59, 130, 246, 0.3);
}

.weatherContentsInformation h3:hover::before {
  opacity: 1;
}

/* Date styling with separator - Updated for better visibility */
.weatherDayDate {
  grid-column: 1 / -1 !important;
  color: var(--text-color) !important;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) !important;
  padding: 20px 16px 16px 16px !important;
  background: var(--glass-bg) !important;
  border: 1px solid var(--glass-border) !important;
  backdrop-filter: blur(10px) !important;
  font-size: 14px !important;
  font-weight: 400 !important;
  margin-top: 8px !important;
  position: relative !important;
  border-radius: 12px !important;
  text-align: center !important;
}

.weatherDayDate::before {
  content: "";
  position: absolute;
  top: 8px;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    var(--border-color),
    transparent
  );
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

/* Responsive adjustments */
@media (max-width: 480px) {
  .weatherContentsInformation {
    grid-template-columns: 1fr;
    gap: 10px;
  }

  .weatherContentsInformation h3 {
    font-size: 12px;
    padding: 12px;
  }
}

.hidden {
  display: none;
}

.show {
  display: flex;
}

p {
  margin: 0;
  font-size: 16px;
  color: #ef4444;
  font-weight: 500;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.weatherItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  max-width: 400px;
  padding: 30px;
  background: var(--cards-color);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  gap: 20px;
  border: 1px solid var(--glass-border);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s ease;
}

.weatherItem:hover,
.tempUnitToggleContainer:hover ~ .weatherItem,
.weatherContents:hover .weatherItem {
  transform: translateY(-5px);
}

.weatherItem:hover ~ .tempUnitToggleContainer,
.weatherContents:hover .tempUnitToggleContainer {
  transform: translateY(-5px);
}

.weatherItem:hover {
  transform: translateY(-5px);
}

.locationContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 40px;
  padding: 20px;
  width: 100%;
  border-top: 1px solid var(--border-color);
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  border-radius: 12px;
}

.locationIcon {
  filter: invert(1) drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
  width: 20px;
  height: 20px;
  margin-right: 12px;
}

.locationText {
  color: var(--text-color);
  font-weight: 500;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.errorTextContainer {
  padding: 12px 20px;
  background: rgba(239, 68, 68, 0.1);
  border: 1px solid rgba(239, 68, 68, 0.3);
  border-radius: 12px;
  backdrop-filter: blur(10px);
}

/* Weather Navigation Buttons */
.weatherButtons {
  position: absolute;
  top: 215.5px;
  transform: translateY(-50%);
  width: 100%;
  max-width: 500px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  pointer-events: none;
  z-index: 10;
}

.weatherPrevious,
.weatherNext {
  pointer-events: all;
}

.weatherPreviousButton,
.weatherNextButton {
  width: 50px;
  height: 50px;
  border: none;
  border-radius: 50%;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  color: var(--text-color);
  font-size: 18px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden;
}

.weatherPreviousButton::before,
.weatherNextButton::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    var(--primary-color),
    var(--primary-hover)
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  border-radius: 50%;
}

.weatherPreviousButton:hover::before,
.weatherNextButton:hover::before {
  opacity: 0.2;
}

.weatherPreviousButton:hover,
.weatherNextButton:hover {
  transform: translateY(-2px) scale(1.05);
  box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
  border-color: var(--primary-color);
}

.weatherPreviousButton:active,
.weatherNextButton:active {
  transform: translateY(0) scale(0.95);
}

/* Arrow styling - Replace the existing arrow styling with this */
.weatherNextButton::after {
  content: "";
  position: relative;
  z-index: 1;
  width: 20px;
  height: 20px;
  background-image: url("./svgs/next2.svg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  filter: invert(1) drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
}

.weatherPreviousButton::after {
  content: "";
  position: relative;
  z-index: 1;
  width: 20px;
  height: 20px;
  background-image: url("./svgs/back2.svg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  filter: invert(1) drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
}

/* Update hover effects to include icon color changes */
.weatherPreviousButton:hover::after,
.weatherNextButton:hover::after {
  filter: invert(1) drop-shadow(0 2px 4px rgba(59, 130, 246, 0.5));
}

/* Position buttons outside the card */
.weatherPreviousButton {
  transform: translateX(-20px);
}

.weatherNextButton {
  transform: translateX(20px);
}

.weatherPreviousButton:hover {
  transform: translateX(-20px) translateY(-2px) scale(1.05);
}

.weatherNextButton:hover {
  transform: translateX(20px) translateY(-2px) scale(1.05);
}

.weatherPreviousButton:active {
  transform: translateX(-20px) translateY(0) scale(0.95);
}

.weatherNextButton:active {
  transform: translateX(20px) translateY(0) scale(0.95);
}

/* Add subtle pulse animation when buttons are available */
.weatherPreviousButton:not(:disabled),
.weatherNextButton:not(:disabled) {
  animation: pulse 3s ease-in-out infinite;
}

@keyframes pulse {
  0%,
  100% {
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
  50% {
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.2);
  }
}

/* Disabled state */
.weatherPreviousButton:disabled,
.weatherNextButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  animation: none;
}

.weatherPreviousButton:disabled:hover,
.weatherNextButton:disabled:hover {
  transform: translateX(-20px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  border-color: var(--glass-border);
}

.weatherNextButton:disabled:hover {
  transform: translateX(20px);
}

/* Responsive Design - Updated card heights */
@media (max-width: 768px) {
  .mainContent > .content {
    width: 95%;
    height: 92%; /* Increased from 90% */
    padding: 20px;
    gap: 20px;
  }

  .searchContainer label {
    font-size: 24px;
  }

  .search {
    flex-direction: column;
    gap: 15px;
  }

  .searchContainer input {
    max-width: 100%;
  }

  .weatherContentsInformation {
    font-size: 16px;
  }

  .weatherIconContainer {
    width: 100px;
    height: 100px;
  }

  .weatherIconContainer img {
    width: 70px;
    height: 70px;
  }

  .weatherButtons {
    max-width: 400px;
  }

  .weatherPreviousButton,
  .weatherNextButton {
    width: 45px;
    height: 45px;
    font-size: 16px;
  }

  .weatherNextButton::after,
  .weatherPreviousButton::after {
    font-size: 18px;
  }

  .weatherPreviousButton {
    transform: translateX(-15px);
  }

  .weatherNextButton {
    transform: translateX(15px);
  }

  .weatherPreviousButton:hover {
    transform: translateX(-15px) translateY(-2px) scale(1.05);
  }

  .weatherNextButton:hover {
    transform: translateX(15px) translateY(-2px) scale(1.05);
  }

  .weatherPreviousButton:active {
    transform: translateX(-15px) translateY(0) scale(0.95);
  }

  .weatherNextButton:active {
    transform: translateX(15px) translateY(0) scale(0.95);
  }

  .weatherPreviousButton:disabled:hover {
    transform: translateX(-15px);
  }

  .weatherNextButton:disabled:hover {
    transform: translateX(15px);
  }
}

@media (max-width: 480px) {
  .mainContent > .content {
    padding: 15px;
    height: 95%; /* Increased height for mobile */
  }

  .weatherItem {
    padding: 20px;
  }

  .searchContainer label {
    font-size: 20px;
  }

  .weatherContentsInformation {
    font-size: 14px;
  }

  .weatherPreviousButton,
  .weatherNextButton {
    width: 40px;
    height: 40px;
    font-size: 14px;
  }

  .weatherNextButton::after,
  .weatherPreviousButton::after {
    font-size: 16px;
  }

  .weatherPreviousButton {
    transform: translateX(-10px);
  }

  .weatherNextButton {
    transform: translateX(10px);
  }

  .weatherPreviousButton:hover {
    transform: translateX(-10px) translateY(-2px) scale(1.05);
  }

  .weatherNextButton:hover {
    transform: translateX(10px) translateY(-2px) scale(1.05);
  }

  .weatherPreviousButton:active {
    transform: translateX(-10px) translateY(0) scale(0.95);
  }

  .weatherNextButton:active {
    transform: translateX(10px) translateY(0) scale(0.95);
  }

  .weatherPreviousButton:disabled:hover {
    transform: translateX(-10px);
  }

  .weatherNextButton:disabled:hover {
    transform: translateX(10px);
  }
}

/* Temperature Unit Toggle Button - Updated positioning */
.tempUnitToggleContainer {
  position: absolute;
  top: 25px;
  right: 75px;
  z-index: 15;
  pointer-events: none; /* Prevent triggering parent hover effects */
  transition: transform 0.3s ease; /* Add smooth transition */
}

.tempUnitToggle {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 6px 12px;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  border-radius: 16px;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  font-family: inherit;
  font-size: 12px;
  font-weight: 500;
  color: var(--text-color);
  gap: 6px;
  min-width: 70px;
  pointer-events: all; /* Re-enable pointer events for the button itself */
}

.unit-option {
  padding: 3px 6px;
  border-radius: 8px;
  transition: all 0.3s ease;
  cursor: pointer;
  position: relative;
  font-size: 11px;
  font-weight: 600;
}

.unit-option.active {
  background: linear-gradient(
    135deg,
    var(--primary-color),
    var(--primary-hover)
  );
  color: white;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
}

.unit-option:not(.active) {
  color: var(--text-secondary);
}

.unit-option:not(.active):hover {
  color: var(--text-color);
  background: rgba(255, 255, 255, 0.05);
}

.unit-divider {
  color: var(--border-color);
  font-weight: 300;
  opacity: 0.6;
  font-size: 10px;
}

/* Remove the pulse animation to make it less distracting */
/* .tempUnitToggle {
  animation: togglePulse 4s ease-in-out infinite;
} */

/* Responsive adjustments for the toggle */
@media (max-width: 768px) {
  .tempUnitToggleContainer {
    top: 12px;
    right: 12px;
  }

  .tempUnitToggle {
    padding: 5px 10px;
    font-size: 11px;
    gap: 5px;
    min-width: 65px;
    border-radius: 14px;
  }

  .unit-option {
    padding: 2px 5px;
    font-size: 10px;
  }

  .unit-divider {
    font-size: 9px;
  }
}

@media (max-width: 480px) {
  .tempUnitToggleContainer {
    top: 10px;
    right: 10px;
  }

  .tempUnitToggle {
    padding: 4px 8px;
    font-size: 10px;
    gap: 4px;
    min-width: 60px;
    border-radius: 12px;
  }

  .unit-option {
    padding: 2px 4px;
    font-size: 9px;
  }

  .unit-divider {
    font-size: 8px;
  }
}
